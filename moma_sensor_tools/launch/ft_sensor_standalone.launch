<launch>
    <!--    Args-->
    <arg name="test" default="false"/>
    <arg name="debug" default="false"/>

    <arg name="sensor_frame" default="ft_sensor0"/>
    <arg name="gravity_aligned_frame" default="world"/>
    <arg name="calibration_file" default="$(find sensor_tools)/config/force_torque_calibration.yaml"/>
    <arg name="raw_wrench_topic" default="/rokubimini/ft_sensor0/ft_sensor_readings/wrench"/>
    <arg name="out_wrench_topic" default="/ft_compensated"/>
    <arg name="imu_topic" default="/kinova_ros_control/imu"/>
    <arg name="launch_prefix" default="" unless="$(arg debug)"/>
    <arg name="launch_prefix" default="gdb -ex run --args" if="$(arg debug)"/>

    <!--    Force torque sensor ROS bridge-->
    <include file="$(find sensor_tools)/launch/rokubimini.launch"/>

    <!--    Gravity compensation and filtering-->
    <node pkg="sensor_tools" name="ft_sensor_node" type="ft_sensor_node" output="screen"
          launch-prefix="$(arg launch_prefix)">
        <param name="sensor_frame" value="$(arg sensor_frame)"/>
        <param name="calibration_file" value="$(arg calibration_file)"/>
        <param name="raw_wrench_topic" value="$(arg raw_wrench_topic)"/>
        <param name="out_wrench_topic" value="$(arg out_wrench_topic)"/>
        <param name="imu_topic" value="$(arg imu_topic)"/>
        <param name="estimate_bias_at_startup" value="true"/>
        <param name="filter_constant" value="0.1"/>
    </node>

    <group if="$(arg test)">
        <node pkg="tf2_ros" type="static_transform_publisher" name="static_sensor_tf"
              args="0 0 0 0 0 0 world $(arg sensor_frame)"/>
    </group>
</launch>
