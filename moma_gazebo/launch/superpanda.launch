<?xml version="1.0"?>
<launch>
  <arg name="gui" default="false" />
  <arg name="rviz" default="true" />
  <arg name="use_fixed_realsense" default="false"/>
  <arg name="tool" default="none"/>

  <!-- spawn panda in siumulation -->
  <include file="$(find moma_gazebo)/launch/superpanda_gazebo.launch">
    <arg name="use_fixed_realsense" value="$(arg use_fixed_realsense)"/>
    <arg name="control_mode" value="Effort"/>
    <arg name="tool" value="$(arg tool)"/>
    <arg name="gui"  value="false"/>
  </include>
  
  <!-- smb control -->
  <include file="$(find smb_control)/launch/smb_control.launch">
    <arg name="description_name"        value="smb_description"/>
    <arg name="control_namespace"       value="control"/>
    <arg name="robot_namespace"         value=""/>
    <arg name="enable_ekf"              value="true" />
    <arg name="simulation"              value="true"/>
    <arg name="mpc"                     value="false"/>
    <arg name="publish_robot_state"     value="false"/>  <!-- Since we do this in the current launch for the full robot -->
    <arg name="load_description"        value="true"/>  <!-- This is just the smb description for the diff drive controller -->
  </include>


  <!-- remap for controllers -->
  <!-- controller expects a namespaced robot description -->
  <remap from="/control/robot_description" to="robot_description"/>

  <!-- Publish camera odometry tf-->
  <node pkg="odometry_conversion" type="odometry_conversion_node" name="tracking_camera_odometry_conversion" output="screen"/>


  <group ns="control">
    <group if="$(eval arg('tool') == 'panda_hand')">
      <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_gripper" />
    </group>

    <group if="$(eval arg('tool') in ['robotiq_2f_85', 'robotiq_2f_toolset'])">
      <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="robotiq_2f_85_controller" />
    </group>
    
    <!-- start a robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- start joint position trajectory controller -->
    <rosparam file="$(find moma_gazebo)/config/panda_controllers.yaml" command="load" />
    <rosparam file="$(find moma_gazebo)/config/gripper_controllers.yaml" command="load" />
    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller effort_joint_trajectory_controller" />

  </group>
  
  <node name="unpause_gazebo" pkg="moma_gazebo" type="unpause_gazebo.py">
    <param name="wait_before_unpause" value="8.0"/>
  </node>

  <!-- start rviz -->
  <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find moma_gazebo)/config/superpanda.rviz" />
  <node name="rqt_controller_manager" type="rqt_controller_manager" pkg="rqt_controller_manager"/>

</launch>
