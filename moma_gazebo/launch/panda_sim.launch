<?xml version="1.0"?>
<launch>

    <!-- Robot arguments -->
    <arg name="arm_id" default="panda" />
    <arg name="use_gripper" default="true" />
    <arg name="moveit" default="true"/>
    <arg name="arm_controller" 
        if="$(arg moveit)" default="effort_joint_trajectory_controller"/>
    <arg name="arm_controller" 
        unless="$(arg moveit)" default="cartesian_impedance_example_controller"/>
    <arg name="scene_file" default="$(find giraffe_moveit_config)/config/z_axis_collision_sim.scene"/>
    <arg name="moveit_planner" default="ompl"/>

    <!-- If we don't do moveit, start the interactive markers. -->
    <arg name="interactive_marker"
      default="$(eval arg('arm_controller') == 'cartesian_impedance_example_controller')"/>

    <!-- Sim arguments -->
    <arg name="gazebo" default="true" />
    <arg name="headless" default="false" />
    <arg name="paused" default="false" />
    <arg name="use_sim_time" default="true" />
    <arg name="world" default="$(find moma_gazebo)/worlds/simple.world" />
    <!-- <arg name="world" default="$(find heron_demo)/worlds/road.world" /> -->
    <arg name="rviz" default="true" />

    <!-- Joint positions -->
    <arg name="initial_joint_positions"
        default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 -0.3927
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -2.95 
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 0
                -J $(arg arm_id)_joint7 0.785398163397
                -J $(arg arm_id)_finger_joint1 0.001
                -J $(arg arm_id)_finger_joint2 0.001" />


    <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
        <arg name="world_name" value="$(arg world)" />
        <arg name="paused" value="$(arg paused)" />
        <arg name="gui" value="$(eval not arg('headless'))" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
    </include>

    <!-- Load arm robot description (later put inside group?) -->
    <param name="robot_description"
        command="$(find xacro)/xacro $(find moma_description)/urdf/panda.urdf.xacro
            publish_realsense_extrinsics:=true
            gazebo:=true
            include_control_plugin:=true"/>

    <group ns="panda">
        <!-- Arm controller params -->
        <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
        <rosparam file="$(find franka_gazebo)/config/sim_controllers.yaml" subst_value="true" />

        <param name="m_ee" value="0.76" if="$(arg use_gripper)" />

        <!-- Spawn required ROS controllers -->
        <node pkg="controller_manager"
                type="spawner"
                name="$(arg arm_id)_gripper_spawner"
                if="$(arg use_gripper)"
                args="franka_gripper"
                respawn="false" />

        <!-- spawns the controller after the robot was put into its initial joint pose -->
        <node pkg="controller_manager"
                type="spawner"
                name="$(arg arm_id)_controller_spawner"
                respawn="false" output="screen"
                args="--wait-for initialized franka_state_controller $(arg arm_controller)" />
            
        <node name="interactive_marker"
            pkg="franka_example_controllers"
            type="interactive_marker.py"
            if="$(arg interactive_marker)">
            <param name="link_name" value="$(arg arm_id)_link0" />
            <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
        </node>
    </group>

    <!-- Start up MoveIt! for arm -->
    <include if="$(arg moveit)" file="$(find panda_moveit_config)/launch/move_group.launch">
        <arg name="load_robot_description" value="false"/>
        <arg name="pipeline" value="$(arg moveit_planner)"/>
    </include>

    <!-- Add collision scene -->
    <node if="$(arg moveit)" name ="moveit_publish_scene_from_text"
        pkg= "moveit_ros_planning"
        type = "moveit_publish_scene_from_text"
        args= "$(arg scene_file)"/>
  

    <node name="robot_state_publisher" pkg="robot_state_publisher" 
        type="robot_state_publisher" output="screen" />

    <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <rosparam param="source_list">
            [panda/franka_state_controller/joint_states,
            panda/franka_gripper/joint_states]
        </rosparam>
        <param name="rate" value="30"/>
    </node>

    <!-- Spawn panda -->
    <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
    <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) $(arg unpause)
              $(arg initial_joint_positions)" />

    <!-- panda RViz -->
    <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" 
        respawn="false" 
        args="-d $(find moma_gazebo)/config/giraffe.rviz" 
        output="screen"/>

</launch>
