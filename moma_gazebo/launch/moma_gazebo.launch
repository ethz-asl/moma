<?xml version="1.0" ?>

<!-- NOTE: Mopa and panda work fine.
Mobmi and yumi support need to be added by specifying the initial config of yumi and loading the controllers. -->

<launch>
  <!-- Arguments -->
  <arg name="robot" default="mopa" doc="Choose platform. Options: {panda, mopa, ridgeback, yumi (TODO), mobmi (TODO)}" />
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="robot_init_x" default="0" />
  <arg name="robot_init_y" default="0" />
  <arg name="arm_controller" default="position" doc="position or velocity"/>
  <arg name="arm_init_config" default="" />

  <param name="/use_sim_time" value="true" />

  <!-- Panda controller setup -->
  <group if="$(eval arg('robot')=='mopa' or arg('robot')=='panda')">
    <!-- Load franka PIDs and controllers and launch them -->
    <rosparam command="load" file="$(find moma_gazebo)/config/panda/controllers_common.yaml"/>
    <rosparam command="load" file="$(find moma_gazebo)/config/panda/pid_gains_common.yaml"/>

    <group if="$(eval arg('arm_controller') == 'position')">
      <rosparam command="load" file="$(find moma_gazebo)/config/panda/position_trajectory_control/pid_gains.yaml"/>
      <rosparam command="load" file="$(find moma_gazebo)/config/panda/position_trajectory_control/controllers.yaml"/>
    </group>

    <group if="$(eval arg('arm_controller') == 'velocity')">
      <rosparam command="load" file="$(find moma_gazebo)/config/panda/position_control/pid_gains.yaml"/>
      <rosparam command="load" file="$(find moma_gazebo)/config/panda/position_control/controllers.yaml"/>
    </group>

    <!-- Launch controller -->
    <node name="franka_controller_spawner" pkg="controller_manager" type="spawner"
      args="franka/controller
            franka/gripper_action_controller
            joint_state_controller" />

  </group>

  <!-- Yumi controller setup -->
  <group if="$(eval arg('robot')=='mobmi' or arg('robot')=='yumi')">
    <!-- Load franka PIDs and controllers and launch them -->
    <!-- TODO -->
  </group>


  <!-- Load robot description -->
  <param name="robot_description" command="$(find xacro)/xacro $(find moma_description)/urdf/$(arg robot).urdf.xacro" />

  <!-- Launch gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Define initial configuration for panda arm -->
  <arg name="arm_init_config_gazebo"
    if="$(eval arg('arm_init_config')=='' and (arg('robot')=='mopa' or arg('robot')=='panda'))"
    value=" -J panda_joint1 0   -J panda_joint2 -0.785
            -J panda_joint3 0   -J panda_joint4 -2.1
            -J panda_joint5 0   -J panda_joint6 1.571
            -J panda_joint7 0.785"/>

    <!-- Define initial configuration for yumi arm -->
    <!-- TODO -->
  <arg unless="$(eval arg('arm_init_config')=='')"
    name="arm_init_config_gazebo" value="$(arg arm_init_config)"/>

  <!-- Spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description
      -model $(arg robot) -z 0.03 -x $(arg robot_init_x) -y $(arg robot_init_y)
      $(arg arm_init_config_gazebo) -unpause" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

  <!-- Launch ridgeback control for mopa and mobmi -->
  <group if="$(eval arg('robot')=='mopa' or arg('robot')=='mobmi')">
    <rosparam command="load" file="$(find moma_gazebo)/config/ridgeback/pid_gains.yaml"/>

    <!-- launch ridgeback control and teleop nodes -->
    <include file="$(find ridgeback_control)/launch/teleop.launch">
      <arg name="joystick" value="false"/>
    </include>
    <!-- <include file="$(find ridgeback_control)/launch/control.launch" /> -->
    <!-- This ridgeback control node launches a joint publisher which is not required when using gazebo. Therefore the commands from the launch file are replicated here. -->
    <rosparam command="load" file="$(find ridgeback_control)/config/control.yaml" />
    <group if="$(optenv RIDGEBACK_CONTROL_EXTRAS 0)" >
      <rosparam command="load" file="$(env RIDGEBACK_CONTROL_EXTRAS_PATH)" />
    </group>
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="ridgeback_velocity_controller" />
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" />
    <node pkg="topic_tools" type="relay" name="cmd_vel_relay"
          args="cmd_vel ridgeback_velocity_controller/cmd_vel" />
  </group>


  <!-- Launch velocity-to-position controller adapter -->
  <node if="$(eval arg('arm_controller') == 'velocity')"
    name="vel_to_pos_controller" pkg="moma_gazebo"
    type="vel_to_pos_controller_node.py" respawn="false" output="screen">
    <remap from="vel_to_pos_controller/command_pos_out" to="/franka/controller/command"/>
  </node>
</launch>
