# Complete Nginx Docker reverse proxy config file
server {
  listen 80;
  listen [::]:80;
  server_name localhost;

  location /wetty {
    proxy_pass http://wetty:3000/wetty;
  }

  location /code {
    rewrite ^/code(.*)$ $1 break;
    proxy_pass http://code-server:8080/;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection upgrade;
    proxy_set_header Accept-Encoding gzip;
  }

  location /markdown {
    proxy_pass http://markdown-reader:8080/;
  }

  location = /robodash/config.json {
    alias /usr/share/nginx/html/robodash/config.json;

    # kill cache
    add_header Last-Modified $date_gmt;
    add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    if_modified_since off;
    expires off;
    etag off;
  }
  location = /robodash/panda.urdf {
    alias /usr/share/nginx/html/robodash/panda.urdf;
  }
  location = /robodash/smb.urdf {
    alias /usr/share/nginx/html/robodash/smb.urdf;
  }
  location /robodash {
    rewrite ^/robodash(.*)$ $1 break;
    proxy_pass http://robodash:8080/;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection upgrade;
    proxy_set_header Accept-Encoding gzip;
  }
  location /franka_description/ {
    root /usr/share/nginx/html;
  }
  location /moma_description/ {
    root /usr/share/nginx/html;
  }
  location /robosense_description/ {
    root /usr/share/nginx/html;
  }
  location /smb_description/ {
    root /usr/share/nginx/html;
  }
  location /realsense2_description/ {
    root /usr/share/nginx/html;
  }

  location / {
    proxy_pass http://dashy:80/;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }
}
