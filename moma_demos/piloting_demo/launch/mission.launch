<?xml version="1.0"?>
<launch>
  <arg name="sim" default="false"/>
  <arg name="standalone" default="false"/>
  <arg name="standalone_arg" default="--standalone" if="$(arg standalone)"/>
  <arg name="standalone_arg" default="" unless="$(arg standalone)"/>
  <arg name="static" default="false"/>
  <arg name="turning_angle_deg" default="false"/>

  <!-- Load joint controller to publish the joint state under object namespace -->
  <group ns="valve" if="$(arg sim)">
    <rosparam command="load" file="$(find piloting_demo)/config/sim/controllers.yaml"/>
    <node name="valve_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="valve_state_controller" />
  </group>

  <!-- valve model -->
  <include file="$(find piloting_demo)/launch/valve.launch">
    <arg name="sim" value="$(arg sim)"/>
    <arg name="x" value="2.0"/>
    <arg name="y" value="2.0"/>
    <!-- arg name="z" value="0"/-->
  </include>

  <!-- detection hotspot relative to estimated valve pose -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="hotspot_far_broadcaster"
        args="-1.5 -1.5 0 0.79 0 0 valve_gt hotspot_far" />

  <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="hotspot_medium_broadcaster"
          args="-0.4 -0.4 0 0.79 0 0 valve_gt hotspot_medium" />

  <node pkg="tf2_ros"
          type="static_transform_publisher"
          name="hotspot_close_broadcaster"
          args="0.0 0 0.4 0 0 3.14 valve_gt hotspot_close" />

  <!-- mission state machine params -->
  <rosparam command="load" file="$(find moma_mission)/config/state_machine/piloting.yaml" subst_value="true"/>
  <rosparam command="load" file="$(find moma_mission)/config/state_machine/piloting_frames.yaml"/>
  <!-- mission state machine params custom overrides -->
  <rosparam param="MODEL_FIT_VALVE/num_spokes" if="$(arg sim)">3</rosparam>
  <rosparam param="REACH_DETECTION_HOTSPOT_FAR/default_outcome" if="$(arg static)">Completed</rosparam>
  <rosparam param="REACH_DETECTION_HOTSPOT_MEDIUM/default_outcome" if="$(arg static)">Completed</rosparam>
  <rosparam param="REACH_DETECTION_HOTSPOT_CLOSE/default_outcome" if="$(arg static)">Completed</rosparam>
  <rosparam param="VALVE_ANGLE_CONTROLLER/turning_angle_deg" if="$(eval arg('turning_angle_deg') != False)" subst_value="true">$(arg turning_angle_deg)</rosparam>
  <!-- mission state machine -->
  <node pkg="moma_mission" type="piloting.py" args="$(arg standalone_arg)" name="piloting_demo" output="screen" required="true">
    <param name="telemetry_odom_topic" value="/base_odom"/>
  </node>
</launch>
