<?xml version="1.0"?>
<launch>
  <arg name="gui" default="false" />
  <arg name="rviz" default="true" />
  <arg name="use_fixed_realsense" default="false"/>
  <arg name="tool" default="none"/>

  <!-- spawn panda in siumulation -->
  <include file="$(find piloting_demo)/launch/superpanda_gazebo.launch">
    <arg name="use_fixed_realsense" value="$(arg use_fixed_realsense)"/>
    <arg name="control_mode" value="Effort"/>
    <arg name="tool" value="$(arg tool)"/>
    <arg name="gui"  value="false"/>
  </include>

  <!-- smb control -->
  <include file="$(find smb_control)/launch/smb_control.launch">
    <arg name="description_name"        value="smb_description"/>
    <arg name="control_namespace"       value="control"/>
    <arg name="robot_namespace"         value=""/>
    <arg name="enable_ekf"              value="true" />
    <arg name="simulation"              value="true"/>
    <arg name="mpc"                     value="false"/>
    <arg name="publish_robot_state"     value="false"/>  <!-- Since we do this in the current launch for the full robot -->
  </include>

  <!-- Publish camera odometry tf-->
  <node pkg="odometry_conversion" type="odometry_conversion_node" name="tracking_camera_odometry_conversion" output="screen"/>

  <group ns="ocs2_mpc">
    <param name="task_file" value="$(find moma_ocs2)/config/mpc/task_panda.info"/>
    <param name="robot_description_ocs2" command="$(find xacro)/xacro $(find moma_description)/urdf/superpanda.urdf.xacro mpc_model:=true use_nominal_extrinsics:=true tool:='none'"/>
    <param name="base_type" value="0"/>
  </group>

  <group ns="control">
    <group if="$(eval arg('tool') == 'panda_hand')">
      <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_gripper" />
    </group>

    <group if="$(eval arg('tool') in ['robotiq_2f_85', 'robotiq_2f_toolset'])">
      <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="robotiq_2f_85_controller" />
    </group>

    <!-- start a robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    <!-- start joint position trajectory controller -->
    <rosparam file="$(find moma_gazebo)/config/panda_controllers.yaml" command="load" />
    <rosparam file="$(find moma_gazebo)/config/gripper_controllers.yaml" command="load" />
    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller mpc_controller" />
  </group>

  <node name="unpause_gazebo" pkg="moma_gazebo" type="unpause_gazebo.py">
    <param name="wait_before_unpause" value="8.0"/>
  </node>

  <!-- launch the base planner -->
  <include file="$(find smb_navigation)/launch/navigate2d_ompl.launch">
    <arg name="sim" value="true"/>
    <arg name="global_frame" value="tracking_camera_odom"/>
  </include>

  <!-- Give a static transform between world and odom frame -->
  <node pkg="tf2_ros"
        type="static_transform_publisher"
        name="depth2_depth_opt_rebroadcaster"
        args="0 0 0 0 0 0 1 world odom" />

  <!-- start rviz -->
  <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find piloting_demo)/config/rviz/superpanda_sim.rviz" />
  <include file="$(find panda_mpc)/launch/interactive_marker.launch"/>

</launch>
