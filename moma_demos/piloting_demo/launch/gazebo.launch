<?xml version="1.0"?>
<launch>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.5"/>
  <arg name="gui" default="false"/>
  <arg name="use_fixed_realsense" default="false"/>
  <arg name="control_mode" default='Position'/>
  <arg name="tool" default="panda_hand"/>
   
  <env name="GAZEBO_MODEL_PATH" value="$(optenv GAZEBO_MODEL_PATH):$(find moma_gazebo)/models:$(find piloting_demo)/models"/>
  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find moma_description)/urdf/superpanda.urdf.xacro use_nominal_extrinsics:=true use_fixed_realsense:=$(arg use_fixed_realsense)
    control_mode:=$(arg control_mode) tool:=$(arg tool)"/>

  <!-- diff_drive_controller is hard coded to /ns/robot_description so we need this remap -->  
  <remap from="/smb/robot_description" to="/smb_description"/>

  <!-- start gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true" />
    <arg name="paused"      value="true" />
    <arg name="gui"         value="$(arg gui)" />
    <arg name="debug"       value="false"/>
    <arg name="world_name"  value="$(find piloting_demo)/worlds/schutz.world"/> <!-- value="$(find moma_gazebo)/worlds/planner_tutorial.world"/> -->
  </include>

  <!-- spawn robot in gazebo -->
  <node name="spawn_panda" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description -model superpanda
      -x $(arg x)
      -y $(arg y)
      -z $(arg z) 
      -J panda_joint1 0
      -J panda_joint2 -0.785
      -J panda_joint3 0
      -J panda_joint4 -2.1
      -J panda_joint5 0
      -J panda_joint6 1.571
      -J panda_joint7 0.785" />

  <param name="valve_description" command="$(find xacro)/xacro --inorder $(find piloting_demo)/urdf/valve.urdf.xacro pitch:=0 yaw:=0.0"/>

  <node name="spawn_valve" pkg="gazebo_ros" type="spawn_model" args="-param valve_description -urdf -model valve" output="screen"/> 

  <node name="valve_state_publisher"  type="robot_state_publisher"  pkg="robot_state_publisher">
    <remap from="robot_description" to="valve_description"/>
    <remap from="/joint_states"     to="/valve/joint_states"/>
  </node>

  <!-- Load joint controller to publish the joint state under object namespace -->
  <group ns="valve">
    <rosparam command="load" file="$(find piloting_demo)/config/sim/controllers.yaml"/>
    <node name="valve_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="valve_state_controller" />
  </group>

</launch>
