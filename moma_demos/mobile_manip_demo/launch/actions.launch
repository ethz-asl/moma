<?xml version="1.0" ?>
<launch>
  <!-- Arguments -->
  <arg name="semantic" default="false" doc="Use Voxblox++ for semantic scene reconstruction" />
  <arg name="simulation_mode" default="true"/>

  <!-- ======== Launch everything ======== -->

  <!-- Load parameters -->
  <rosparam command="load" file="$(find mobile_manip_demo)/config/moma_demo.yaml" subst_value="true"/>

  <!-- TSDF node -->
  <node pkg="vgn" type="tsdf_server.py" name="tsdf_server" output="screen"/>

  <!-- Launch Manipulation scripts -->
  <!-- Grasp -->
  <node pkg="grasp_demo" type="reset.py" name="reset" launch-prefix="bash -c 'sleep 10; $0 $@'" output="screen"/>
  <node pkg="grasp_demo" type="reconstruct_scene.py" name="scan_action_node" args="$(arg semantic)" launch-prefix="bash -c 'sleep 10; $0 $@'" output="screen" />
  <node pkg="grasp_demo" type="execute_grasp.py" name="execute_grasp"  launch-prefix="bash -c 'sleep 10; $0 $@'" output="screen"/>
  <node pkg="mobile_manip_demo" type="fake_manipulation.py" name="force_manipulation" output="screen"/>
  <node pkg="mobile_manip_demo" type="grasp_node.py" name="grasp_skill" launch-prefix="bash -c 'sleep 20; $0 $@'" output="screen"/>

  <!-- Drop -->
  <node pkg="mobile_manip_demo" type="drop_node.py" name="drop_skill" launch-prefix="bash -c 'sleep 20; $0 $@'" output="screen"/>

  <!-- Recharge -->
  <node pkg="mobile_manip_demo" type="battery_node.py" name="recharge_skill" launch-prefix="bash -c 'sleep 20; $0 $@'" output="screen"/>

</launch>
