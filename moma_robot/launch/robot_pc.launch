<?xml version="1.0" ?>
<launch>
  <arg name="load_gripper" default="false"/>
  <arg name="robot_ip" default="192.168.1.12"/>

  <!-- Load the robot description -->
  <arg name="tool" default="panda_hand"/>

  <!-- 0 = none, 1 = skidsteer, 2 = holonomic -->
  <arg name="base_type" default="0"/>
   
  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find moma_description)/urdf/panda.urdf.xacro use_nominal_extrinsics:=true use_fixed_realsense:=false tool:=$(arg tool)"/>

  <!-- Launch franka gripper -->
  <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg load_gripper)">
	    <arg name="robot_ip" value="$(arg robot_ip)" />
  </include>
  
  <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
    <rosparam command="load" file="$(find moma_robot)/config/franka_control_node.yaml" />
    <param name="robot_ip" value="$(arg robot_ip)" />
  </node>

  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
    <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>

  <!-- OCS2 params -->
  <group ns="ocs2_mpc">
    <param name="task_file" value="$(find moma_ocs2)/config/mpc/task_panda.info"/>
    <param name="robot_description_ocs2" command="$(find xacro)/xacro $(find moma_description)/urdf/superpanda.urdf.xacro mpc_model:=true use_nominal_extrinsics:=true tool:='none'"/>
    <param name="base_type" value="$(arg base_type)"/>
  </group>

  <!--<group ns="control">-->
      <rosparam command="load" file="$(find franka_control)/config/default_controllers.yaml" />
      <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller"/>

      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>

      <!-- Load all available controllers -->
      <rosparam command="load" file="$(find moma_robot)/config/controllers.yaml" />

      <!-- Load but do not start these controllers -->
      <arg name="controllers_load_list" value="joint_space_controller joint_velocity_controller mpc_controller path_admittance_controller"/>
      <node name="controller_loader" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped $(arg controllers_load_list)" />

      <!-- Already start these controllers -->
      <arg name="controllers_start_list" value="path_passthrough_controller"/>
      <node name="controller_starter" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg controllers_start_list)" />
  <!--</group>-->

</launch>
