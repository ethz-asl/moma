<?xml version="1.0"?>
<launch>
  <arg name="rviz" default="true" />
  <arg name="robot_ip" default="$(env FRANKA_IP)" />
  <arg name="publish_world_link" default="true" />
  <arg name="moveit" default="true" />
  <arg name="arm_id" default="panda" />
  <arg name="controller" default="effort_joint_trajectory_controller" />
  <arg name="table" default="true" />
  <arg name="use_bota" default="false" />
 
  <!-- If we don't do moveit, start the interactive markers. -->
  <arg name="interactive_marker"
    default="$(eval arg('controller') == 'cartesian_impedance_example_controller')"
    doc="Should the interactive marker node be started?" />

  <!-- Launch control -->
  <include file="$(find moma_bringup)/launch/components/franka_control.launch">
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="xacro_args"
      value="use_fixed_camera:=false use_wrist_camera:=true publish_realsense_extrinsics:=false use_bota:=$(arg use_bota)" />
  </include>

  <!-- Controller settings. -->
  <rosparam command="load"
    file="$(find franka_example_controllers)/config/franka_example_controllers.yaml"
    subst_value="true" />

  <!-- Start required controller -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="$(arg controller)" />

  <!-- Fix panda to world -->
  <node if="$(arg publish_world_link)" pkg="tf" type="static_transform_publisher"
    name="world_link_broadcaster" args="0 0 0 0 0 0 1 world panda_link0 100" />

  <!-- Launch MoveIt -->
  <include if="$(arg moveit)" file="$(find panda_moveit_config)/launch/move_group.launch">
    <arg name="load_robot_description" value="false" />
  </include>

  <!-- If desired, launch a preconfigured Rviz -->
  <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
    args="-d $(find moma_bringup)/rviz/panda_moveit.rviz" output="screen">
    <rosparam command="load" file="$(find panda_moveit_config)/config/kinematics.yaml" />
  </node>

  <!-- Start only if cartesian_impedance_example_controller -->
  <node name="interactive_marker"
    pkg="franka_example_controllers"
    type="interactive_marker.py"
    if="$(arg interactive_marker)">
    <param name="link_name" value="$(arg arm_id)_link0" />
    <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
  </node>

  <!-- Start up table calibrator (which publishes the transforms to the table) unless requested not
  to. -->
  <node if="$(arg table)" name="table_calibrator" pkg="moma_utils" type="table_calibrator.py">
    <param name="file_path" value="$(find moma_bringup)/config/table.yaml" />
  </node>
</launch>