<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="robot_id" default="giraffe" />
  <arg name="robot_ip" default="$(env FRANKA_IP)" />
  <arg name="use_bota" default="false" />
  <arg name="moveit" default="true" />
  <arg name="scene_file" default="$(find giraffe_moveit_config)/config/z_axis_collision.scene"/>

  <!-- Robot Customization -->
  <arg name="arm_id" default="panda" />
  <arg name="use_gripper" default="true" />

  <arg name="controller" if="$(arg moveit)" default="effort_joint_trajectory_controller" />
  <arg name="controller" unless="$(arg moveit)" default="cartesian_impedance_example_controller" />

  <param name="move_group/default_planning_pipeline" value="ompl" />

  <!-- If we don't do moveit, start the interactive markers. -->
  <arg name="interactive_marker"
    default="$(eval arg('controller') == 'cartesian_impedance_example_controller')"
    doc="Should the interactive marker node be started?" />

  <!-- Arm controllers -->
  <group ns="panda">
    <param name="arm_id" value="$(arg arm_id)" />
    <param name="pipeline" value="ompl" />
    <param name="move_group/default_planning_pipeline" value="ompl" />

    <!-- Load robot description  -->
    <param name="robot_description"
            command="xacro $(find moma_description)/urdf/panda.urdf.xacro
                    publish_realsense_extrinsics:=false
                    arm_id:=$(arg arm_id)
                    parent:=franka_mount_link
                    gazebo:=false
                    use_bota:=false
                    include_control_plugin:=false
                    use_fixed_camera:=false
                    use_wrist_camera:=false"/>

    <!-- Launch control -->
    <include file="$(find moma_bringup)/launch/components/franka_control.launch">
      <arg name="robot_ip" value="$(arg robot_ip)" />
      <arg name="load_robot_description" value="false"/>
      <arg name="robot_state_publisher" value="false"/>
      <arg name="load_gripper" value="$(arg use_gripper)"/>
      <arg name="load_joint_state" value="true"/>
    </include>

    <!-- Controller settings. -->
    <rosparam command="load"
      file="$(find franka_example_controllers)/config/franka_example_controllers.yaml"
      subst_value="true" />

    <!-- Start required controller -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="$(arg controller)" />

    <!-- Launch MoveIt -->
    <include if="$(arg moveit)" file="$(find panda_moveit_config)/launch/move_group.launch">
      <arg name="load_robot_description" value="false" />
      <arg name="load_gripper" value="$(arg use_gripper)"/>
      <arg name="pipeline" value="ompl" />
    </include>

    <!-- Add collision scene -->
    <node if="$(arg moveit)" name ="moveit_publish_scene_from_text"
      pkg= "moveit_ros_planning"
      type = "moveit_publish_scene_from_text"
      args= "$(arg scene_file)"/>

    <!-- Start only if cartesian_impedance_example_controller -->
    <node name="interactive_marker"
      pkg="franka_example_controllers"
      type="interactive_marker.py"
      if="$(arg interactive_marker)">
      <param name="link_name" value="$(arg arm_id)_link0" />
      <remap to="cartesian_impedance_example_controller/equilibrium_pose" from="equilibrium_pose" />
    </node>

  </group>

</launch>
