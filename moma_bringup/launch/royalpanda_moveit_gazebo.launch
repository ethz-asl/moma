<?xml version="1.0"?>
<launch>

  <!-- Gazebo & GUI Configuration -->
  <arg name="gazebo"      default="true"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="world"       default="worlds/empty.world" doc="Filename to a SDF World for gazebo to use" />
  <arg name="rviz"        default="true" doc="Should RVIz be launched?" />

  <!-- Robot Customization -->
  <arg name="arm_id"            default="panda" doc="Name of the panda robot to spawn" />
  <arg name="use_gripper"       default="true"  doc="Should a franka hand be mounted on the flange?" />
<!--  <arg name="controller"        default=" "     doc="Which example controller should be started? (One of {cartesian_impedance,model,force}_example_controller)" />-->
  <arg name="x"                 default="0"     doc="How far forward to place the base of the robot in [m]?" />
  <arg name="y"                 default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
  <arg name="z"                 default="0"     doc="How far upwards to place the base of the robot in [m]?" />
  <arg name="roll"              default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
  <arg name="pitch"             default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
  <arg name="yaw"               default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0
                -J $(arg arm_id)_joint2 0
                -J $(arg arm_id)_joint3 0
                -J $(arg arm_id)_joint4 -1.57079632679
                -J $(arg arm_id)_joint5 0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0.785398163397
                -J $(arg arm_id)_finger_joint1 0.001
                -J $(arg arm_id)_finger_joint2 0.001"
       />

  <!-- Remap command velocity topic -->
  <remap from="/mobile_base/cmd_vel" to="/cmd_vel"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch" if="$(arg gazebo)">
    <arg name="world_name" value="$(arg world)"/>
    <!-- Always start in paused mode, and only unpause when spawning the model -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <!-- Load robot descriptions -->
  <param name="robot_description"
         command="xacro $(find moma_description)/urdf/royalpanda.urdf.xacro
                  use_nominal_extrinsics:=true"/>
  <param name="robot_description_arm"
         command="xacro $(find moma_description)/urdf/panda.urdf.xacro
                  use_nominal_extrinsics:=true
                  gazebo:=true
                  include_control_plugin:=false"/>

  <!-- Arm controllers -->
  <group ns="panda">
    <rosparam file="$(find franka_gazebo)/config/franka_hw_sim.yaml" subst_value="true" />
    <rosparam file="$(find franka_gazebo)/config/sim_controllers.yaml" subst_value="true" />
    <param name="m_ee" value="0.76" if="$(arg use_gripper)" />

    <node pkg="controller_manager"
          type="spawner"
          name="$(arg arm_id)_gripper_spawner"
          if="$(arg use_gripper)"
          args="franka_gripper"
          respawn="false"
    />

    <node pkg="controller_manager"
          type="spawner"
          name="$(arg arm_id)_controller_spawner"
          respawn="false" output="screen"
          args="franka_state_controller position_joint_trajectory_controller"
    />
  </group>

  <!-- Base controllers -->
  <arg name="joystick" default="false" />
  <group ns="mobile_base">
    <param name="robot_description"
       command="xacro $(find moma_description)/urdf/ridgeback.urdf.xacro
                include_control_plugin:=false"/>

    <rosparam param="gazebo_ros_control/pid_gains">
      front_left_wheel:
        p: 1
        i: 0.1
        d: 0
      front_right_wheel:
        p: 1
        i: 0.1
        d: 0
      rear_left_wheel:
        p: 1
        i: 0.1
        d: 0
      rear_right_wheel:
        p: 1
        i: 0.1
        d: 0
    </rosparam>
    <include file="$(find ridgeback_control)/launch/control.launch" />
    <include file="$(find ridgeback_control)/launch/teleop.launch">
      <arg name="joystick" value="$(arg joystick)"/>
    </include>
  </group>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">
      [panda/franka_state_controller/joint_states,
      panda/franka_gripper/joint_states,
      mobile_base/joint_states,
      mobile_base/odom]
    </rosparam>
    <param name="rate" value="30"/>
  </node>

  <!-- Launch MoveIt -->
  <include file="$(find royalpanda_moveit_config)/launch/move_group.launch">
    <arg name="load_robot_description" value="false"/>
  </include>

  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) $(arg unpause)
              $(arg initial_joint_positions)
              "/>

  <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false" args="-d $(find moma_bringup)/config/royalpanda_moveit.rviz" output="screen">
    <rosparam command="load" file="$(find royalpanda_moveit_config)/config/kinematics.yaml"/>
  </node>

</launch>
