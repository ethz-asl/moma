<?xml version="1.0"?>
<robot>
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>

<!--
        <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
            <robotNamespace>/</robotNamespace>
            <updateRate>50.0</updateRate>
            <bodyName>imu_link</bodyName>
            <topicName>imu/data</topicName>
            <accelDrift>0.005 0.005 0.005</accelDrift>
            <accelGaussianNoise>0.005 0.005 0.005</accelGaussianNoise>
            <rateDrift>0.00005 0.00005 0.00005</rateDrift>
            <rateGaussianNoise>0.00005 0.00005 0.00005</rateGaussianNoise>
            <headingDrift>0.005</headingDrift>
            <headingGaussianNoise>0.005</headingGaussianNoise>
        </plugin> -->

        <!-- Don't need this. Use one central joint_state_publisher for all joints. -->
        <!-- <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
        <jointName>front_rocker</jointName>
        <robotNamespace>/</robotNamespace>
        <updateRate>50.0</updateRate>
        </plugin> -->
    </gazebo>

    <!-- All static links get collapsed down to base_link in Gazebo, so that's
    the one to apply the colour to (in Gazebo 5+). -->
    <gazebo reference="world_link">
        <material>Gazebo/DarkGrey</material>
        <gravity>true</gravity>
    </gazebo>


    <!-- Individual link colouring still needed in Gazebo 2.x -->
    <gazebo reference="chassis_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="top_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="left_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="right_side_cover_link"><material>Gazebo/Yellow</material></gazebo>
    <gazebo reference="front_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="rear_cover_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="front_lights_link"><material>Gazebo/White</material></gazebo>
    <gazebo reference="rear_lights_link"><material>Gazebo/Red</material></gazebo>
    <gazebo reference="front_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="rear_rocker_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="axle_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="base_link"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="world_link_x"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="world_link_y"><material>Gazebo/DarkGrey</material></gazebo>
    <gazebo reference="world_link"><material>Gazebo/DarkGrey</material></gazebo>

    <!-- Wheel friction to zero, as movement is handled by applying forces at
    the body level. -->
    <gazebo reference="front_left_wheel_link">
        <material>Gazebo/DarkGrey</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="front_right_wheel_link">
        <material>Gazebo/DarkGrey</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="rear_left_wheel_link">
        <material>Gazebo/DarkGrey</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
    </gazebo>

    <gazebo reference="rear_right_wheel_link">
        <material>Gazebo/DarkGrey</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
    </gazebo>

    <transmission name="rbs_jointx_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="world_base_x">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="base_link_joint_x_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <transmission name="rbs_jointy_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="world_base_y">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="base_link_joint_y_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <transmission name="rbs_jointth_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="world_base_th">
        <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
      <actuator name="base_link_joint_th_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <!-- Add transmission for rocker, just s.t. its joint state gets published -->
    <transmission name="front_rocker_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="front_rocker">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="front_rocker_dummy_act"/>
    </transmission>

    <gazebo reference="cam_link_f">
    <sensor name="cam_link_f_sensor" type="depth">
      <update_rate>5</update_rate>
      <camera>
        <horizontal_fov>1.5708</horizontal_fov>
        <image>
          <width>150</width>
          <height>100</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>10</far>
        </clip>
      </camera>
      <plugin name="cam_link_f_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1</updateRate>
        <cameraName>cam_link_f</cameraName>
        <imageTopicName>/cam_link_f/depth/image_raw</imageTopicName>
        <cameraInfoTopicName>/cam_link_f/depth/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/cam_link_f/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/cam_link_f/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/cam_link_f/pointcloud</pointCloudTopicName>
        <frameName>cam_link_f_optical</frameName>
        <pointCloudCutoff>0.2</pointCloudCutoff>
        <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="cam_link_r">
  <sensor name="cam_link_r_sensor" type="depth">
    <update_rate>5</update_rate>
    <camera>
      <horizontal_fov>1.5708</horizontal_fov>
      <image>
        <width>150</width>
        <height>100</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.05</near>
        <far>10</far>
      </clip>
    </camera>
    <plugin name="cam_link_r_plugin" filename="libgazebo_ros_openni_kinect.so">
      <baseline>0.2</baseline>
      <alwaysOn>true</alwaysOn>
      <updateRate>1</updateRate>
      <cameraName>cam_link_r</cameraName>
      <imageTopicName>/cam_link_r/depth/image_raw</imageTopicName>
      <cameraInfoTopicName>/cam_link_r/depth/camera_info</cameraInfoTopicName>
      <depthImageTopicName>/cam_link_r/depth/image_raw</depthImageTopicName>
      <depthImageInfoTopicName>/cam_link_r/depth/camera_info</depthImageInfoTopicName>
      <pointCloudTopicName>/cam_link_r/pointcloud</pointCloudTopicName>
      <frameName>cam_link_r_optical</frameName>
      <pointCloudCutoff>0.2</pointCloudCutoff>
      <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
      <distortionK1>0.00000001</distortionK1>
      <distortionK2>0.00000001</distortionK2>
      <distortionK3>0.00000001</distortionK3>
      <distortionT1>0.00000001</distortionT1>
      <distortionT2>0.00000001</distortionT2>
      <CxPrime>0</CxPrime>
      <Cx>0</Cx>
      <Cy>0</Cy>
      <focalLength>0</focalLength>
      <hackBaseline>0</hackBaseline>
    </plugin>
  </sensor>
</gazebo>

<gazebo reference="cam_link_l">
<sensor name="cam_link_l_sensor" type="depth">
  <update_rate>5</update_rate>
  <camera>
    <horizontal_fov>1.5708</horizontal_fov>
    <image>
      <width>150</width>
      <height>100</height>
      <format>R8G8B8</format>
    </image>
    <clip>
      <near>0.05</near>
      <far>10</far>
    </clip>
  </camera>
  <plugin name="cam_link_l_plugin" filename="libgazebo_ros_openni_kinect.so">
    <baseline>0.2</baseline>
    <alwaysOn>true</alwaysOn>
    <updateRate>1</updateRate>
    <cameraName>cam_link_l</cameraName>
    <imageTopicName>/cam_link_l/depth/image_raw</imageTopicName>
    <cameraInfoTopicName>/cam_link_l/depth/camera_info</cameraInfoTopicName>
    <depthImageTopicName>/cam_link_l/depth/image_raw</depthImageTopicName>
    <depthImageInfoTopicName>/cam_link_l/depth/camera_info</depthImageInfoTopicName>
    <pointCloudTopicName>/cam_link_l/pointcloud</pointCloudTopicName>
    <frameName>cam_link_l_optical</frameName>
    <pointCloudCutoff>0.2</pointCloudCutoff>
    <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
    <distortionK1>0.00000001</distortionK1>
    <distortionK2>0.00000001</distortionK2>
    <distortionK3>0.00000001</distortionK3>
    <distortionT1>0.00000001</distortionT1>
    <distortionT2>0.00000001</distortionT2>
    <CxPrime>0</CxPrime>
    <Cx>0</Cx>
    <Cy>0</Cy>
    <focalLength>0</focalLength>
    <hackBaseline>0</hackBaseline>
  </plugin>
</sensor>
</gazebo>


<gazebo reference="cam_link_b">
<sensor name="cam_link_b_sensor" type="depth">
  <update_rate>5</update_rate>
  <camera>
    <horizontal_fov>1.5708</horizontal_fov>
    <image>
      <width>150</width>
      <height>100</height>
      <format>R8G8B8</format>
    </image>
    <clip>
      <near>0.05</near>
      <far>10</far>
    </clip>
  </camera>
  <plugin name="cam_link_b_plugin" filename="libgazebo_ros_openni_kinect.so">
    <baseline>0.2</baseline>
    <alwaysOn>true</alwaysOn>
    <updateRate>1</updateRate>
    <cameraName>cam_link_b</cameraName>
    <imageTopicName>/cam_link_b/depth/image_raw</imageTopicName>
    <cameraInfoTopicName>/cam_link_b/depth/camera_info</cameraInfoTopicName>
    <depthImageTopicName>/cam_link_b/depth/image_raw</depthImageTopicName>
    <depthImageInfoTopicName>/cam_link_b/depth/camera_info</depthImageInfoTopicName>
    <pointCloudTopicName>/cam_link_b/pointcloud</pointCloudTopicName>
    <frameName>cam_link_b_optical</frameName>
    <pointCloudCutoff>0.2</pointCloudCutoff>
    <pointCloudCutoffMax>8.0</pointCloudCutoffMax>
    <distortionK1>0.00000001</distortionK1>
    <distortionK2>0.00000001</distortionK2>
    <distortionK3>0.00000001</distortionK3>
    <distortionT1>0.00000001</distortionT1>
    <distortionT2>0.00000001</distortionT2>
    <CxPrime>0</CxPrime>
    <Cx>0</Cx>
    <Cy>0</Cy>
    <focalLength>0</focalLength>
    <hackBaseline>0</hackBaseline>
  </plugin>
</sensor>
</gazebo>


    <!-- This is an wheel-level solution to possibly revisit at a future date. -->
    <!--<gazebo>
    <plugin name="mecanum_gazebo" filename="libmecanum_force_plugin.so">
    <wheelJointName>front_left_wheel</wheelJointName>
    <forceScaleFactor>1</forceScaleFactor>
    </plugin>
    <plugin name="mecanum_gazebo" filename="libmecanum_force_plugin.so">
    <wheelJointName>front_right_wheel</wheelJointName>
    <forceScaleFactor>-1</forceScaleFactor>
    </plugin>
    <plugin name="mecanum_gazebo" filename="libmecanum_force_plugin.so">
    <wheelJointName>rear_left_wheel</wheelJointName>
    <forceScaleFactor>-1</forceScaleFactor>
    </plugin>
    <plugin name="mecanum_gazebo" filename="libmecanum_force_plugin.so">
    <wheelJointName>rear_right_wheel</wheelJointName>
    <forceScaleFactor>1</forceScaleFactor>
    </plugin>
    </gazebo> -->
</robot>
