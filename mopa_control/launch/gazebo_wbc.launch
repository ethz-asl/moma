<?xml version="1.0" ?>

<!-- No top level launch file. Assumes that simulated world is already launched -->

<launch>
  <!-- arguments -->
  <arg name="load_gripper" default="true" />
  <arg name="load_base" default="true" />
  <arg name="world_name" default="worlds/empty.world"/>
  <arg name="gui" default="false" doc="Starts gazebo gui" />
  <arg name="launch_rviz" default="false" />
  <!-- The simulation needs to be launched in paused mode. Otherwise, the initial position of the robot is not
  set correctly. -->
  <arg name="paused" default="true" doc="Starts gazebo in paused mode" />

  <!-- some franka parameters -->
  <rosparam command="load" file="$(find mopa_control)/config/pid_gains.yaml"/>
  <rosparam command="load" file="$(find mopa_control)/config/mopa_controllers.yaml"/>

  <!-- launch franka controllers -->
  <node name="franka_controller_spawner" pkg="controller_manager" type="spawner" args=
		"franka/position_joint_trajectory_controller
		franka/gripper_action_controller
        joint_state_controller" />

  <!-- assemble and load URDF -->
  <group if="$(arg load_base)">
    <param if="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro $(find mopa_description)/robots/ridgeback_simple_panda_hand.urdf.xacro" />
    <param unless="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro $(find mopa_description)/robots/ridge_panda.urdf.xacro" />
  </group>
  <group unless="$(arg load_base)">
    <param unless="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro $(find franka_description)/robots/panda_arm.urdf.xacro" />
    <param if="$(arg load_gripper)" name="robot_description" command="$(find xacro)/xacro $(find franka_description)/robots/panda_arm_hand.urdf.xacro" />
  </group>

  <!-- launch gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -param robot_description
      -model mopa -z 0.03
      -J panda_joint1 0
      -J panda_joint2 -0.785
      -J panda_joint3 0
      -J panda_joint4 -2.1
      -J panda_joint5 0
      -J panda_joint6 1.571
      -J panda_joint7 0.785
      -J world_base_x 3.5
      -J world_base_y 1.5
      -unpause" />
  <!-- Setting the start position of joint4 causes issues. The standard Panda home position of that
        joint would be -2.356. However, when choosing a value smaller than -2.1, the joint in the simulation
        goes to a value which is outside its range, which breaks the simulation. -->

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

  <!-- launch ridgeback control and teleop nodes -->
  <!-- <include file="$(find ridgeback_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include> -->
  <!-- <include file="$(find ridgeback_control)/launch/control.launch" /> -->
  <!-- This ridgeback control node launches a joint publisher which is not required when using gazebo. Therefore the commands from the launch file are replicated here. -->
  <rosparam command="load" file="$(find ridgeback_control)/config/control.yaml" />
  <group if="$(optenv RIDGEBACK_CONTROL_EXTRAS 0)" >
    <rosparam command="load" file="$(env RIDGEBACK_CONTROL_EXTRAS_PATH)" />
  </group>
  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner"
        args="ridgeback_velocity_controller" /> -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" />
  <node pkg="topic_tools" type="relay" name="cmd_vel_relay"
        args="cmd_vel ridgeback_velocity_controller/cmd_vel" />

  <!-- launch rviz -->
  <node if="$(arg launch_rviz)" pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find mopa_control)/config/mopa.rviz"/>

</launch>
